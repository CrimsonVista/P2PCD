//
// Generated file, do not edit! Created by nedtool 5.5 from veins/modules/messages/BasicSafetyMessage.msg.
//

#ifndef __BASICSAFETYMESSAGE_M_H
#define __BASICSAFETYMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/base/utils/Coord.h"
#include "veins/modules/messages/WaveShortMessage_m.h"
// }}

/**
 * Class generated from <tt>veins/modules/messages/BasicSafetyMessage.msg:29</tt> by nedtool.
 * <pre>
 * packet BasicSafetyMessage extends WaveShortMessage
 * {
 *     Coord senderPos;
 *     Coord senderSpeed;
 * 
 * 
 *     // P2P CD PACKET 
 *     unsigned char signature[];
 *     unsigned int signatureLength;
 *     string public_key;
 * 	// END P2P CD PACKET 
 * }
 * </pre>
 */
class BasicSafetyMessage : public ::WaveShortMessage
{
  protected:
    Coord senderPos;
    Coord senderSpeed;
    //unsigned char *signature; // array ptr
    unsigned int signature_arraysize;
    unsigned int signatureLength;
    ::omnetpp::opp_string public_key;

  private:
    void copy(const BasicSafetyMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BasicSafetyMessage&);

  public:
    BasicSafetyMessage(const char *name=nullptr, short kind=0);
    BasicSafetyMessage(const BasicSafetyMessage& other);
    virtual ~BasicSafetyMessage();
    BasicSafetyMessage& operator=(const BasicSafetyMessage& other);
    virtual BasicSafetyMessage *dup() const override {return new BasicSafetyMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual Coord& getSenderPos();
    virtual const Coord& getSenderPos() const {return const_cast<BasicSafetyMessage*>(this)->getSenderPos();}
    virtual void setSenderPos(const Coord& senderPos);
    virtual Coord& getSenderSpeed();
    virtual const Coord& getSenderSpeed() const {return const_cast<BasicSafetyMessage*>(this)->getSenderSpeed();}
    virtual void setSenderSpeed(const Coord& senderSpeed);
    virtual void setSignatureArraySize(unsigned int size);
    virtual unsigned int getSignatureArraySize() const;
    virtual unsigned char getSignature(unsigned int k) const;
    virtual void setSignature(unsigned int k, unsigned char signature);
    virtual unsigned int getSignatureLength() const;
    virtual void setSignatureLength(unsigned int signatureLength);
    virtual const char * getPublic_key() const;
    virtual void setPublic_key(const char * public_key);
    virtual void setSignature(char* sig);
    virtual char* getSignature();

    char *signature; // array ptr
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BasicSafetyMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BasicSafetyMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __BASICSAFETYMESSAGE_M_H

